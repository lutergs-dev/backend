spring:
  data:
    mongodb:
      uri: mongodb+srv://${MONGO_USERNAME:'username'}:${MONGO_PASSWORD:'password'}@${MONGO_URL:'url'}/${MONGO_DATABASE:'db'}?retryWrites=true&w=majority
  r2dbc:
    url: r2dbc:pool:postgres://${POSTGRES_URL:'url'}:${POSTGRES_PORT:'port'}/${POSTGRES_DB:'db'}?schema=${POSTGRES_SCHEMA:'schema'}
    username: ${POSTGRES_USERNAME:'username'}
    password: ${POSTGRES_PASSWORD:'password'}

  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY:'access-key'}
        secret-key: ${AWS_SECRET_KEY:'secret-key'}
        instance-profile: true
      region:
        static: ap-northeast-2

server:
  port: ${SERVER_PORT:0}

custom:
  server:
    url:
      frontend: https://${FRONT_SERVER_DOMAIN:localhost}
      frontend-app: https://${FRONT_APP_DOMAIN}
      backend: https://${BACKEND_SERVER_DOMAIN:localhost}
    root-domain: ${ROOT_DOMAIN:localhost}

  s3:
    bucket-name: ${AWS_BUCKET_NAME:'bucket-name'}
    bucket-directory-prefix: ${AWS_BUCKET_PREFIX:'bucket-prefix'}

  oauth:
    client-id: ${OAUTH_CLIENT_ID:'oauth-client-id'}
    client-secret: ${OAUTH_CLIENT_SECRET:'oauth-client-secret'}

  token:
    rsa-key-location: ${RSA_KEY_LOCATION:'./private.pem'}
    expire-hour: ${TOKEN_EXPIRE_HOUR:'2'}
    is-secure: ${ENABLE_SECURE_TOKEN:false}

  push:
    public-key: ${PUSH_PUBLIC_KEY}
    private-key: ${PUSH_PRIVATE_KEY}
    topic-trigger-key: ${PUSH_TOPIC_TRIGGER_KEY}
    new-topic:
      request-url: ${PUSH_NEW_TOPIC_REQUEST_URL}
      username: ${PUSH_NEW_TOPIC_USERNAME}
      password: ${PUSH_NEW_TOPIC_PASSWORD}
