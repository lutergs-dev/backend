name: Build and upload to AWS

on:
  push:
    branches: ["main"]

env:
  ENVS: "envs"

# for AWS credentials
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: main
    steps:
      # checkout branch
      - name: checkout branch
        uses: actions/checkout@v3

      - name: copy PEM
        env:
          PEM_STR: ${{ secrets.JWT_TOKEN_ENCRYPT_PEM }}
        run: echo $PEM_STR > ./private.pem

      - name: get credentials of ECS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_BRANCH_MAIN }}
          role-session-name: lutergs-backend
          aws-region: ap-northeast-2

      - name: login to AWS ECR
        id: login-to-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-to-ecr.outputs.registry }}
          REPOSITORY: lutergs-backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG --build-arg ACTIVE_PROFILES=${{ secrets.ACTIVE_PROFILES }} .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  build-graalvm:
    runs-on: ubuntu-latest
    steps:
      # checkout branch
      - name: checkout branch
        uses: actions/checkout@v3

      - name: init graalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.7'
          distribution: 'graalvm-community'
          components: 'native-image'
          set-java-home: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: build native image
        run: |
          echo 'spring.profiles.active=server' > ./src/main/resources/application.properties
          ./gradlew nativeCompile

      - name: upload binary
        uses: actions/upload-artifact@v2
        with:
          name: lutergs-backend
          path: ./build/native/nativeCompile/*

  upload-server:
    runs-on: ubuntu-latest
    environment: main
    steps:

      - name: checkout branch
        uses: actions/checkout@v3

      - name: setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build
        run: ./gradlew build

      - name: Set environment Variable
        run: |
          echo "APP_VERSION=$(./gradlew properties -q | grep "^version:" | awk '{print $2}')" >> $GITHUB_ENV
          echo "CURRENT_DATE=$(date +%s)" >> $GITHUB_ENV

      - name: move and rename JAR
        run: |
          mv build/libs/lutergs-backend-$APP_VERSION.jar app-new.jar

      - name: move JAR to server 1
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_1_IP }}
          username: ${{ secrets.SERVER_1_USERNAME }}
          key: ${{ secrets.SERVER_1_SSH_KEY }}
          port: 22
          source: app-new.jar
          target: ~/lutergs-backend

      - name: move JAR to server 2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_2_IP }}
          username: ${{ secrets.SERVER_2_USERNAME }}
          key: ${{ secrets.SERVER_2_SSH_KEY }}
          port: 22
          source: app-new.jar
          target: ~/lutergs-backend

      - name: update system daemon of server 1
        uses: appleboy/ssh-action@v1.0.0
        env:
          SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.SERVER_1_IP }}
          username: ${{ secrets.SERVER_1_USERNAME }}
          key: ${{ secrets.SERVER_1_SSH_KEY }}
          port: 22
          envs: SHA
          script: |
            mv ~/lutergs-backend/app.jar ~/lutergs-backend/app-$SHA.jar
            mv ~/lutergs-backend/app-new.jar ~/lutergs-backend/app.jar
            sudo systemctl restart lutergs-backend

      - name: update system daemon of server 2
        uses: appleboy/ssh-action@v1.0.0
        env:
          SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.SERVER_2_IP }}
          username: ${{ secrets.SERVER_2_USERNAME }}
          key: ${{ secrets.SERVER_2_SSH_KEY }}
          envs: SHA
          script: |
            mv ~/lutergs-backend/app.jar ~/lutergs-backend/app-$SHA.jar
            mv ~/lutergs-backend/app-new.jar ~/lutergs-backend/app.jar
            sudo systemctl restart lutergs-backend
          
